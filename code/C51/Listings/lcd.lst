C51 COMPILER V9.60.0.0   LCD                                                               05/01/2023 00:54:07 PAGE 1   


C51 COMPILER V9.60.0.0, COMPILATION OF MODULE LCD
OBJECT MODULE PLACED IN .\Objects\lcd.obj
COMPILER INVOKED BY: C:\Keil_v4\C51\BIN\C51.EXE lcd.c OPTIMIZE(8,SPEED) PRINT(.\Listings\lcd.lst) TABS(2) OBJECT(.\Objec
                    -ts\lcd.obj)

line level    source

   1          #include <reg52.h>
   2          #include <intrins.h>
   3          #include "lcd.h"
   4          #include "delay.h"
   5          #include <stdio.h>
   6          
   7          sbit RS = P0^6;
   8          sbit RW = P0^5;
   9          sbit EN = P0^4;
  10          
  11          #define RS_CLR RS=0
  12          #define RS_SET RS=1
  13          #define RW_CLR RW=0
  14          #define RW_SET RW=1
  15          #define EN_CLR EN=0
  16          #define EN_SET EN=1
  17          
  18          #define DataPort P2
  19          
  20          void LCD_Write_Com(unsigned char com)
  21          {
  22   1          DataPort= com;
  23   1          RS_CLR;
  24   1          RW_CLR;
  25   1          DelayMs(10);
  26   1          EN_SET;
  27   1          _nop_();
  28   1          EN_CLR;
  29   1      }
  30          
  31          void LCD_Write_Data(unsigned char Data)
  32          {
  33   1          DataPort = Data;
  34   1          RS_SET;
  35   1          RW_CLR;
  36   1          DelayMs(10);
  37   1          EN_SET;
  38   1          _nop_();
  39   1          EN_CLR;
  40   1      }
  41          
  42          void LCD_Clear(void)
  43          {
  44   1          LCD_Write_Com(0x01);
  45   1          DelayMs(20);
  46   1      }
  47          
  48          void LCD_Write_String(unsigned char x, unsigned char y, unsigned char *s)
  49          {
  50   1          if (y == 0)
  51   1          {
  52   2              LCD_Write_Com(0x80 + x);     //表示第一行
  53   2          }
  54   1          else
C51 COMPILER V9.60.0.0   LCD                                                               05/01/2023 00:54:07 PAGE 2   

  55   1          {
  56   2              LCD_Write_Com(0xC0 + x);      //表示第二行
  57   2          }
  58   1          while (*s)
  59   1          {
  60   2              LCD_Write_Data( *s);
  61   2              s++;
  62   2          }
  63   1      }
  64          
  65          void LCD_Write_Char(unsigned char x, unsigned char y, unsigned char Data)
  66          {
  67   1          if (y == 0)
  68   1          {
  69   2              LCD_Write_Com(0x80 + x);
  70   2          }
  71   1          else
  72   1          {
  73   2              LCD_Write_Com(0xC0 + x);
  74   2          }
  75   1          LCD_Write_Data(Data);
  76   1      }
  77          
  78          unsigned char code mychar[64] = {0x0e, 0x02, 0x0e, 0x02, 0x0e, 0x00, 0x00, 0x00};
  79          
  80          void LCD_FillCGRAM(void)            //自定义字符的填充函数
  81          {
  82   1          unsigned char i;
  83   1          LCD_Write_Com(0x40);             //写指令告诉是在写自定义字符
  84   1          for (i = 0; i < 8; i++)         //i <= 64
  85   1          {
  86   2              LCD_Write_Data(mychar[i]);   //把3的字模数据写进去
  87   2          }
  88   1      }
  89          
  90          void LCD_Init(void)
  91          {
  92   1          LCD_Write_Com(0x01);
  93   1          DelayMs(20);
  94   1          LCD_Write_Com(0x38);
  95   1          DelayMs(20);
  96   1          LCD_Write_Com(0x0C);
  97   1          DelayMs(20);
  98   1          LCD_Write_Com(0x06);
  99   1          DelayMs(20);
 100   1          LCD_FillCGRAM();
 101   1          DelayMs(20);
 102   1      }
 103          
 104          void lcd_test(void)
 105          {
 106   1          LCD_Init();
 107   1          LCD_Clear();
 108   1      
 109   1          LCD_Write_String(0, 0, "set:");
 110   1          LCD_Write_String(11, 0, "mg/m");
 111   1          LCD_Write_Char(15, 0, 0);
 112   1      
 113   1          LCD_Write_String(0, 1, "cur:");
 114   1          LCD_Write_String(11, 1, "mg/m");
 115   1          LCD_Write_Char(15, 1, 0);
 116   1      }
C51 COMPILER V9.60.0.0   LCD                                                               05/01/2023 00:54:07 PAGE 3   

 117          
 118          void lcd_display(uint8_t set_val, float val)
 119          {
 120   1          char buf[5];
 121   1          float val_tmp;
 122   1          sprintf(buf, "%0.3f", val);
 123   1          LCD_Write_String(5, 1, buf);
 124   1      
 125   1          val_tmp = set_val;
 126   1      
 127   1          sprintf(buf, "%0.3f", val_tmp / 100);
 128   1          LCD_Write_String(5, 0, buf);
 129   1      }


MODULE INFORMATION:   STATIC OVERLAYABLE
   CODE SIZE        =    396    ----
   CONSTANT SIZE    =     85    ----
   XDATA SIZE       =   ----    ----
   PDATA SIZE       =   ----    ----
   DATA SIZE        =   ----      17
   IDATA SIZE       =   ----    ----
   BIT SIZE         =   ----    ----
END OF MODULE INFORMATION.


C51 COMPILATION COMPLETE.  0 WARNING(S),  0 ERROR(S)
